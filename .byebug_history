c
params[:auth_token]
c
params[:auth_token]
c
RestClient.get "https://graph.facebook.com/v2.4/me",  { :params => { :access_token => access_token } }
c
User.get_fb_data( params[:access_token] )
params[:access_token]
c
User.find_by_email(params[:email]).valid_password?(params[:password])
User.find_by_email(params[:email]).valid_password(params[:password])
User.find_by_email(params[:email])
c
old_auth_token
user.old_auth_token
user
response.code
response
c
exit
user
old_auth_token
c
user
c
params[:q]
c
params[:q]
c
request.env["omniauth.auth"]
request
requesst
c
User.all
@user
c
@user
c
params[:facebook]
c
@events.count
@events
@q
params[:q]
c
params[:q]
@q
c
@q.result(distince: false)
@q.result(distince: true)
@q.result(params[:q])
@q.result
@q.count
@q
c
params[:q]
Event.ransack(params[:q])
params[:q]
Event
params[:q]
params[:q].to_sym
params[:q].to_s
params[:q]
Event.ransack(params[:q]).result
@q.result(distinct: true)
@q
c
Event.ransack(params[:q])
@q
c
Event.ransack(params[:q]).as_json
Event.ransack(params[:q]).inspect
Event.ransack(params[:q]).methods
Event.ransack(params[:q]).class
Event.ransack(params[:q])
@events.count
events.count
@events
c
@q.result(distinct: true).count
@q.result(distinct: true)
@q
@events.count
@events
@q
c
Event.count
Event.all
params[:q]
Event.ransack(params[:q]).count
Event.ransack(params[:q])
params[:q]
Event
c
@events
c
@events
c
@events
c
@events
c
@events
